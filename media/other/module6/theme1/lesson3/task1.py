def series_sum(incoming):
    # Конкатенирует все элементы списка, приводя их к строкам.
    result = ''
    for i in incoming:
        result += str(i)
    return result


# Первое тестирование: проверьте, корректно ли сработает функция series_sum(),
# если ей на вход передать список из целых и дробных чисел.

mixed_numbers = [228, 22.8]  # Список из int и float.
result_numbers = '22822.8' # Ожидаемый результат, который должна вернуть функция series_sum().

# Вместо многоточия напишите утверждение, которое должно быть проверено.
assert series_sum(mixed_numbers) == result_numbers, (
    'Функция series_sum() некорректно обрабатывает смешанный список из int и float.'
)

# Второе тестирование: проверьте, корректно ли сработает функция series_sum(),
# если ей на вход передать список из чисел и строк.

mixed_numbers_strings = ['228', 22.8, 228] # Cписок из чисел и строк.
result_numbers_strings = '22822.8228' # Ожидаемый результат, который должна вернуть series_sum().

# Вместо многоточия напишите утверждение, которое должно быть проверено.
assert series_sum(mixed_numbers_strings) == result_numbers_strings, (
    'Функция series_sum() некорректно обрабатывает смешанный список из чисел и строк.'
)

# Третье тестирование: проверьте, корректно ли сработает функция series_sum(),
# если ей на вход передать пустой список.
empty = [] # Пустой список.
result_empty = '' # Ожидаемый результат, который должна вернуть series_sum().

# Вместо многоточия напишите утверждение, которое должно быть проверено.
assert series_sum(empty) == result_empty, (
    'Функция series_sum() некорректно обрабатывает пустой список'
)

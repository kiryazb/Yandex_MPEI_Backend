"""
Settings for bot.
"""
from aiogram.dispatcher import Dispatcher
from aiogram import types
from aiogram.types.inline_keyboard import InlineKeyboardMarkup, InlineKeyboardButton

from server import bot
from keyboards import main_keyboard
from utils import auth


async def settings_cancel(call_query: types.CallbackQuery):
    """Breaks account setting process."""
    await bot.send_message(
        call_query.from_user.id,
        "*–û—Ç–º–µ–Ω–∞*\n\n–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –≤–µ—Å—Ç–∏ —É—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤! üíµ",
        parse_mode="Markdown",
        reply_markup=main_keyboard(),
    )


@auth
async def settings_handler(message: types.Message):
    """Go to settings."""
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton("–°—á–µ—Ç–∞", callback_data="account_settings"),
        InlineKeyboardButton("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="settings_categories"),
    )

    await message.answer(
        "*–ù–∞—Å—Ç—Ä–æ–π–∫–∏*\n\n–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å—á–µ—Ç –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—ã–π, "
        "—Ç–æ –∂–µ —Å–∞–º–æ–µ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏.",
        parse_mode="Markdown",
        reply_markup=markup,
    )


def register_settings_handlers(dp: Dispatcher):
    """Registers all handlers related to new user registration."""
    from handlers.settings.accounts.accounts import register_accounts_settings_handlers
    from handlers.settings.categories.categories import register_categories_settings_handlers

    register_accounts_settings_handlers(dp)
    register_categories_settings_handlers(dp)

    dp.register_callback_query_handler(
        settings_cancel,
        lambda cb: cb.data == "settings_cancel",
    )

    dp.register_message_handler(
        settings_handler,
        lambda msg: msg.text.lower().startswith("–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"),
    )
